스프링 부트 구조

웹브라우저 요청 -> 이 요청을  Controller  클래스에서 받아 분기 처리하여
-> Service 클래스 는  그 요청에 맞는 작업을 실행
Repository 클래스는 데이터베이스를 위한 클래스 이며 데이터 베이스 테이블과 실제 연결이 됨.

Controller -> 프레젠테이션 계층
- HTTP 요청을 받고 이 요청을 비즈니스 계층으로 전송하는 역할을 한다.

Service -> 비즈니스 계층
- 모든 비즈니스 로직을 처리한다.
- 예를  들어 웹 사이트에서 벌어지는 모든 작업,
- 주문 서비스 라고 한다면(주문개수,가격 등의 데이터를 처리하기위한 로직, 예외 처리 로직, 주문을 받거나 취소)

Repository -> 퍼시스턴스 계층
- 모든 데이터베이스 관련 로직을 처리하며, 데이터베이스에 접근하는 DAO  객체를 사용할 수도 있다
- DAO -> 데이터베이스 계층과 상호작용하기 위한 객체

Build.gradle : 빌드를 설정하는 파일이며, 의존성이나 플러그인 설정 등과 같이 빌에 필요한 설정을 할 때 사용

settings.gradle: 빌드할 프로젝트의 정보를 설정하는 파일

포스트맨 GET 요청시 과정
HTTP 요청 ->  Controller -> Service -> Repository -> 데이터베이스


버전확인
1. Intellij IDEA
IntelliJ IDEA 2024.2.3 Community Edition 을 사용
Windows 에서도 동일한 2024.2.3 버전을 설치하는 것이 좋음

2. JAVA (JDK)
Oracle OpenJDK 17.0.12을 사용하고 있는데, 이는 LTS(Long-Term Support) 버전이라서 안정성이 좋음.
Windows 에서도 동일한 JDK 17.0.12을 사용

3. Kotlin
Kotlin 플러그인 버전은 2.0.0

4. Gradle
Gradle 버전은 8.10.2
두 환경 모두에서 Gradle Wrapper 를 사용하여 버전을 고정하는 방법을 추천
환경에 따라 Gradle 버전이 다르더라도 프로젝트 내에서 지정된 버전을 강제로 사용하게 됨

5. Dependencies 의존성
MySQL Connector 버전이 8.0.32로 설정되어 있으니,
두 환경에서 동일한 MySQL 버전을 사용해야 합니다.